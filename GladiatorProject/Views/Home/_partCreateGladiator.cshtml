@model GladiatorProject.Models.Player



@using (Ajax.BeginForm("CreatePerson",
   new AjaxOptions
   {
       InsertionMode = InsertionMode.Replace,
       UpdateTargetId = "Player"
   }
   ))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Player</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Gladiator Name" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control", placeholder = "Add dropdown here" } })
            @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Make changes to the adding of stats to own view model.*@
    <div class="form-group">
        @Html.LabelFor(model => model.Health, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Health, new { htmlAttributes = new { @class = "form-control", placeholder = "Starting health" } })
            @Html.ValidationMessageFor(model => model.Health, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Armor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Armor, new { htmlAttributes = new { @class = "form-control", placeholder = "Starting armor" } })
            @Html.ValidationMessageFor(model => model.Armor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Damage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Damage, new { htmlAttributes = new { @class = "form-control", placeholder = "Starting damage" } })
            @Html.ValidationMessageFor(model => model.Damage, "", new { @class = "text-danger" })

        </div>
    </div>

    <div>
        @Html.LabelFor(Model => Model.SkillPoints) :
        @Model.SkillPoints
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Main", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
